/****************************************************************************
**
** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
** Contact: http://www.qt-project.org/legal
**
** This file is part of the Qt Solutions component.
**
** $QT_BEGIN_LICENSE:BSD$
** You may use this file under the terms of the BSD license as follows:
**
** "Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
** * Redistributions of source code must retain the above copyright
** notice, this list of conditions and the following disclaimer.
** * Redistributions in binary form must reproduce the above copyright
** notice, this list of conditions and the following disclaimer in
** the documentation and/or other materials provided with the
** distribution.
** * Neither the name of Digia Plc and its Subsidiary(-ies) nor the names
** of its contributors may be used to endorse or promote products derived
** from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
   \page index

   \indexpage Index
   \startpage Basic Qt
   \nextpage Basic Qt


    \title Enginio Installation and Prerequisites

    This guide shows how to use the Enginio Qt library in a Qt application
    (both Qt C++ and QML cases are covered).
    This guide can be also applied when integrating Enginio with existing Qt projects.

    \section1 Prerequisites
    \l {enginio-qml}{pokus}
    \l {AllClass}{asdlaksjdlaksj}

    You can use Enginio with an existing installation of Qt 5.2 or later, or get Qt packages containing Engino (starting with Qt 5.2).

    \list
      \li  Development environment (Linux, Windows or Mac OS X) and compiler toolchain.
      \li  Qt framework, 5.2 or newer
      \li  OpenSSL to enable SSL support in Qt.
           Install the OpenSSL binaries into your system and Qt will automatically pick them up.

           \list
             \li Mac OS X: the OpenSSL library should be preinstalled in the system
             \li Linux: Most distributions have a preinstalled OpenSSL library. If yours doesn't, install libssl via your distribution's package manager
             \li Windows: Install Win32 OpenSSL (light version is enough, copy DLLs to windows system directory when asked)
           \endlist

        \li Perl 5.10 or newer to enable Qt5 module compilation
        \list
            \li Mac OS X: Perl should exist as preinstalled in the system
            \li Linux: Perl should exist as preinstalled in the system
            \li Windows: Install some Perl distribution
        \endlist
    \endlist

    \section1 Install Enginio Qt library

    \list
      \li  Download the latest library release for your platform
      \li  Execute downloaded binary installer and follow instructions
    \endlist

*/


/*!
\page enginio-qml
\indexpage Enginio Overview
\nextpage index
\previouspage Enginio Installation and Prerequisites

\title Getting Started with Enginio using Qt Quick
\brief Introduction to using Enginio using Qt Quick

\section1 Setup a Qt Quick 2 application project

Create a new Qt Quick 2 Application.

You can use Qt Creator to get started with a template.
(File ⇒ New File or Project ⇒ Applications ⇒ Qt Quick 2 Application)

\section1 Initialize Enginio Client

To use Enginio's QML API, you have to import the library.
\code
import Enginio 1.0
\endcode

Initialize the ginio1::EnginioClient}{enginio client} with the Client::backendId}{backend id} value, which can be copied from the Dashboard.

Go to Dashboard ⇒ Your Backend home-view ⇒ See ’Keys box’ ⇒ Copy backend id value.

\code
EnginioClient {
    id: enginio
    backendId: "YOUR_OWN_BACKEND_ID"
}
\endcode

\section1 Store your first Object

Now you can store an Object with Enginio. First, create an object in JSON format and fill it with data as needed.
Then call create on the client with the JSON object as a parameter.

\code
Component.onCompleted: {
    var city = {
        objectType: "objects.city",
        name: "Helsinki",
        population: 606000
    };
    enginio.create(city);
}

\endcode

Now you can Checking stored objects in the Dashboard}{check the Enginio dashboard} for the newly created object.
*/

/*!
    \page basicqt
    \contentspage {Basic Qt} {Contents}
    \nextpage Getting Started
    \contentspage {Basic Qt}{Content}

    \indexpage Index
    \startpage Basic Qt

    \title Basic Qt

    The Qt toolkit is a C++ class library and a set of tools for
    building multiplatform GUI programs using a "write once,
    compile anywhere approach".

    Table of contents:

    \list
    \li \l {Getting Started}
    \li \l {Creating Dialogs}
    \endlist
*/

/*!
   \page gettingstarted
   \previouspage Basic Qt
   \contentspage {Basic Qt} {Contents}
   \nextpage Creating Dialogs



   \indexpage Index
   \startpage Basic Qt

   \title Getting Started

   This chapter shows how to combine basic C++ with the
   functionality provided by Qt to create a few small graphical
   interface (GUI) applications.
*/

/*!
   \page creatingdialogs
   \previouspage Getting Started
   \contentspage {Basic Qt} {Contents}



   \indexpage Index
   \startpage Basic Qt

   \title Creating Dialogs

   This chapter will teach you how to create dialog boxes using Qt.
*/

/*!
   \page AllClass
   \previouspage Getting Started
   \contentspage {Basic Qt} {Contents}

   \title All clasess

   \generatelist {classes}

   This chapter will teach you how to create dialog boxes using Qt.
*/

